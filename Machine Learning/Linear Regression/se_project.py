# -*- coding: utf-8 -*-
"""SE_project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1y9PpZDUMUYM-8hyo8G21a8i_SVEUvq6c

Importing Libraries and Dataset
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
from sklearn.metrics import r2_score

dataset = pd.read_excel('/content/DataSet.xlsx')
print(dataset)

"""Training our model using Linear Regression for New_ElectricityConsumption"""

X = dataset[['ElectricityConsumption', 'New_LightIntensity']]
y = dataset['New_ElectricityConsumption']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=0)

# Standardize the features (optional but can help with model performance)
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Initialize and train the linear regression model
model = LinearRegression()
model.fit(X_train_scaled, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test_scaled)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
print(f'Mean Squared Error: {mse}')

# Evaluate the model with R-squared
r2 = r2_score(y_test, y_pred)
print(f'R-squared: {r2}')

"""Training our model using Linear Regression for New_LightIntensity"""

X = dataset[['NumOfCars', 'LightIntensity']]
y = dataset['New_LightIntensity']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=0)

scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

model = LinearRegression()
model.fit(X_train_scaled, y_train)

y_pred = model.predict(X_test_scaled)

r2 = r2_score(y_test, y_pred)
print(f'R-squared: {r2}')